services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    ports:
      - "9092:9092"     # Access Kafka from host
      - "29092:29092"   # Access Kafka from other containers
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  postgres:
    image: debezium/postgres:17-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
      - pgdata:/var/lib/postgresql/data
  
  pgadmin:
    image: dpage/pgadmin4:9.7.0
    container_name: pgadmin
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}

  redis:
    image: redis:7.2
    container_name: redis
    ports:
      - "6379:6379"

  connect:
    image: debezium/connect:2.7.3.Final
    container_name: connect
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:29092
      GROUP_ID: ${CONNECT_GROUP_ID}
      CONFIG_STORAGE_TOPIC: ${CONNECT_CONFIG_STORAGE_TOPIC}
      OFFSET_STORAGE_TOPIC: ${CONNECT_OFFSET_STORAGE_TOPIC}
      STATUS_STORAGE_TOPIC: ${CONNECT_STATUS_STORAGE_TOPIC}
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_PLUGIN_PATH: /kafka/connect,/usr/share/java
    depends_on:
      - kafka
      - postgres

  redpanda-console:
    image: redpandadata/console
    container_name: redpanda-console
    ports:
      - "9999:8080"
    environment:
      KAFKA_BROKERS: kafka:29092
    depends_on:
      - kafka

  #   flink-jobmanager:
  #     image: flink:1.17-scala_2.12
  #     command: jobmanager
  #     ports:
  #       - "8081:8081"
  #     environment:
  #       - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
  #     depends_on:
  #       - kafka
  #     volumes:
  #       - ./flink-job:/opt/flink/usrlib

  # flink-taskmanager:
  #   image: flink:1.17-scala_2.12
  #   command: taskmanager
  #   environment:
  #     - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
  #   depends_on:
  #     - flink-jobmanager
  #   volumes:
  #     - ./flink-job:/opt/flink/usrlib


volumes:
  pgdata:
